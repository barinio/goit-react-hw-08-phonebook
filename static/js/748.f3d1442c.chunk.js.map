{"version":3,"file":"static/js/748.f3d1442c.chunk.js","mappings":"yRAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAO5BC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yHAOrBI,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wLAapBM,EAAaT,EAAAA,GAAAA,OAAaU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+S,sEC7B1BQ,E,QAAiBX,GAAAA,QAAcE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kY,UCC/BS,EAAU,SAAHC,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC/B,OACEC,EAAAA,EAAAA,MAACL,EAAc,CAAAI,SAAA,EACbE,EAAAA,EAAAA,KAAA,MAAAF,SAAKD,IACJC,IAGP,C,oICKMG,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,QAHL,iBAGuB,aAAaC,SAAS,YAC5DC,SAAUL,EAAAA,KAAaM,IAAI,EAAG,aAAaF,SAAS,cAgCtD,EA7BkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MAKjB,OACEV,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,cAAe,CAAER,MAAO,GAAIG,SAAU,IACtCM,iBAAkBZ,EAClBa,SARe,SAACC,EAAQC,GAC1BA,EAAQC,YACRR,GAASS,EAAAA,EAAAA,IAAWH,GACtB,EAKyBjB,UAErBC,EAAAA,EAAAA,MAACjB,EAAAA,GAAa,CAAAgB,SAAA,EACZC,EAAAA,EAAAA,MAACT,EAAAA,GAAK,CAAAQ,SAAA,CAAC,SAELE,EAAAA,EAAAA,KAACb,EAAAA,GAAK,CAACgC,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAC7CrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAW,UAExCxB,EAAAA,EAAAA,MAACT,EAAAA,GAAK,CAAAQ,SAAA,CAAC,YAELE,EAAAA,EAAAA,KAACb,EAAAA,GAAK,CAACgC,KAAK,WAAWC,KAAK,WAAWC,YAAY,mBACnDrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAW,UAE3CvB,EAAAA,EAAAA,KAACR,EAAAA,GAAU,CAAC2B,KAAK,SAAQrB,SAAC,oBAIlC,E,UCjCA,EAVkB,WAChB,OACEE,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAA1B,UACEE,EAAAA,EAAAA,KAACL,EAAAA,EAAO,CAACE,MAAM,eAAcC,UAC3BE,EAAAA,EAAAA,KAACyB,EAAS,OAIlB,C","sources":["components/ContactsForm/ContactsForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/LogInForm/LogIn.jsx","page/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 7px;\n  border: 3px solid #1035ac;\n  border-radius: 5px;\n`;\nexport const Label = styled.label`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 21px;\n  color: #1035ac;\n  gap: 5px;\n\n  & p {\n    color: red;\n  }\n`;\nexport const FormButton = styled.button`\n  text-transform: uppercase;\n  font-size: 15px;\n  padding: 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #1035ac;\n  color: white;\n  font-weight: 600;\n  box-shadow: rgba(0, 50, 255, 0.5) 0px 1px 8px;\n\n  &:is(:focus, :hover) {\n    background-color: #067038;\n  }\n`;\n","import styled from 'styled-components';\nexport const SectionWrapper = styled.section`\n  width: 450px;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n  border-radius: 7px;\n  box-shadow: inset #1035ac 0 0 7px;\n  background-image: linear-gradient(55deg, #00bfff, #00ffff);\n  background-color: #87cefa;\n  gap: 16px;\n\n  & h2 {\n    color: #1035ac;\n    text-align: center;\n  }\n  &:first-child {\n    margin: 25px auto;\n  }\n`;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  FormButton,\n  FormContainer,\n  Input,\n  Label,\n} from 'components/ContactsForm/ContactsForm.styled';\nimport { loginThunk } from 'redux/auth/thunk';\n\nconst emailReg = /^\\w+@\\w+\\.\\w+$/;\n\nconst schema = yup.object().shape({\n  email: yup.string().matches(emailReg, 'Not valid').required('Required'),\n  password: yup.string().min(8, 'Not valid').required('Required'),\n});\n\nconst LogInForm = () => {\n  const dispatch = useDispatch();\n  const submitForm = (values, actions) => {\n    actions.resetForm();\n    dispatch(loginThunk(values));\n  };\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={schema}\n      onSubmit={submitForm}\n    >\n      <FormContainer>\n        <Label>\n          Email\n          <Input type=\"email\" name=\"email\" placeholder=\"example@mail.com\" />\n          <ErrorMessage name=\"email\" component={'p'} />\n        </Label>\n        <Label>\n          Password\n          <Input type=\"password\" name=\"password\" placeholder=\"examplepwd123\" />\n          <ErrorMessage name=\"password\" component={'p'} />\n        </Label>\n        <FormButton type=\"submit\">Create User</FormButton>\n      </FormContainer>\n    </Formik>\n  );\n};\n\nexport default LogInForm;\n","import LogInForm from 'components/LogInForm/LogIn';\nimport { Section } from 'components/Section/Section';\n\nconst LogInPage = () => {\n  return (\n    <>\n      <Section title=\"Welcome back\">\n        <LogInForm />\n      </Section>\n    </>\n  );\n};\n\nexport default LogInPage;\n"],"names":["FormContainer","styled","Form","_templateObject","_taggedTemplateLiteral","Input","Field","_templateObject2","Label","_templateObject3","FormButton","_templateObject4","SectionWrapper","Section","_ref","title","children","_jsxs","_jsx","schema","yup","shape","email","matches","required","password","min","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","loginThunk","type","name","placeholder","ErrorMessage","component","_Fragment","LogInForm"],"sourceRoot":""}